<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'App\Controller\ControllerProfessor' shared autowired service.

include_once $this->targetDirs[3].'\\vendor\\symfony\\framework-bundle\\Controller\\ControllerTrait.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\framework-bundle\\Controller\\AbstractController.php';
include_once $this->targetDirs[3].'\\src\\Controller\\GenericController.php';
include_once $this->targetDirs[3].'\\src\\Controller\\ControllerProfessor.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security-core\\Encoder\\UserPasswordEncoderInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security-core\\Encoder\\UserPasswordEncoder.php';
include_once $this->targetDirs[3].'\\src\\Helper\\EntityFactory.php';
include_once $this->targetDirs[3].'\\src\\Helper\\ProfessorFactory.php';
include_once $this->targetDirs[3].'\\src\\Helper\\HandleRequest.php';

$a = ($this->privates['App\\Repository\\UsuarioRepository'] ?? $this->load('getUsuarioRepositoryService.php'));

$this->services['App\\Controller\\ControllerProfessor'] = $instance = new \App\Controller\ControllerProfessor(($this->privates['App\\Repository\\ProfessorRepository'] ?? $this->load('getProfessorRepositoryService.php')), ($this->services['doctrine.orm.default_entity_manager'] ?? $this->load('getDoctrine_Orm_DefaultEntityManagerService.php')), new \App\Helper\ProfessorFactory(($this->privates['security.encoder_factory.generic'] ?? $this->load('getSecurity_EncoderFactory_GenericService.php')), $a), ($this->privates['App\\Helper\\HandleRequest'] ?? ($this->privates['App\\Helper\\HandleRequest'] = new \App\Helper\HandleRequest())), $a, ($this->services['security.password_encoder'] ?? $this->load('getSecurity_PasswordEncoderService.php')));

$instance->setContainer(($this->privates['.service_locator.CDOTD6.'] ?? $this->load('get_ServiceLocator_CDOTD6_Service.php'))->withContext('App\\Controller\\ControllerProfessor', $this));

return $instance;
